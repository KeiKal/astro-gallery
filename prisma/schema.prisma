// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  image       String
  category    String
  stock       Int
  slug        String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  user            User        @relation(fields: [userId], references: [id])
  userId          String      @db.ObjectId
  items           OrderItem[]
  status          OrderStatus @default(PENDING)
  total           Float
  shippingAddress Address?
  paymentIntent   String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model OrderItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String  @db.ObjectId
  productId String
  quantity  Int
  price     Float
  name      String
}

model Address {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  order    Order  @relation(fields: [orderId], references: [id])
  orderId  String @unique @db.ObjectId
  street   String
  city     String
  state    String
  zipCode  String
  country  String
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  DELIVERED
  CANCELLED
}
