---
import ProductCard from './ProductCard.astro';
import Navbar from './Navbar.astro';

interface Product {
  id: string;
  name: string;
  description: string;
  price: number;
  image: string;
  category: string;
  stock: number;
  slug: string;
}

let products: Product[] = [];
try {
  const response = await fetch('http://localhost:4321/api/products');
  if (!response.ok) {
    throw new Error(`HTTP error! status: ${response.status}`);
  }
  products = await response.json();
} catch (error) {
  console.error('Error fetching products:', error);
  products = [];
}
---

<Navbar />

<div class="container mx-auto px-4 py-8">
  <div class="mb-8">
    <input
      type="text"
      id="searchInput"
      placeholder="Search products..."
      class="w-full p-2 border rounded-lg"
    />
  </div>
  
  {products.length > 0 ? (
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
      {products.map((product: Product) => (
        <ProductCard product={product} />
      ))}
    </div>
  ) : (
    <div class="text-center py-8">
      <p class="text-gray-600">No products found</p>
    </div>
  )}
</div>

<script>
  const searchInput = document.getElementById('searchInput') as HTMLInputElement;
  const productCards = document.querySelectorAll('.product-card');
  
  searchInput?.addEventListener('input', (e: Event) => {
    const target = e.target as HTMLInputElement;
    const searchTerm = target.value.toLowerCase();
    
    productCards.forEach((card) => {
      const productName = card.getAttribute('data-name')?.toLowerCase() || '';
      const productDescription = card.getAttribute('data-description')?.toLowerCase() || '';
      
      if (productName.includes(searchTerm) || productDescription.includes(searchTerm)) {
        (card as HTMLElement).style.display = 'block';
      } else {
        (card as HTMLElement).style.display = 'none';
      }
    });
  });
</script> 