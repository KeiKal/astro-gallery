---
import { fetchImages } from '../utils/api';

const images = await fetchImages();
---

<div class="container mx-auto px-4 py-6">
  <!-- Gallery Header -->
  <h1 class="text-2xl sm:text-3xl font-bold text-black-800 text-center mb-8">
    Explore Stunning Photos
  </h1>

  {images.length === 0 ? (
    <p class="text-black-500 text-center">No images found. Please try again later!</p>
  ) : (
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8">
      {images.map((image) => (
        <div 
          key={image.id} 
          class="group relative bg-white rounded-lg overflow-hidden"
        >
          <!-- Image Section -->
          <div class="relative overflow-hidden">
            <img
              src={image.urls.small}
              alt={image.alt_description || 'Image'}
              class="w-full h-52 object-cover transform transition-transform duration-500 group-hover:scale-110"
            />
            <!-- Gradient Overlay on Hover -->
            <div class="absolute inset-0 bg-gradient-to-b from-transparent to-gray-800 group-hover:opacity-80 transition-opacity duration-500"></div>
          </div>

          <!-- Card Content -->
          <div class="p-4 text-black-800 relative z-10">
            <h2 class="text-lg font-semibold truncate text-black-100 transition-colors duration-500">
              {image.alt_description || 'Beautiful Image'}
            </h2>
            <p class="text-sm text-black-300 mt-2 group-hover:text-black-200 transition-colors duration-500 line-clamp-2">
              {image.description || 'No description available.'}
            </p>
            <div class="mt-3 flex justify-between items-center">
              <button 
                data-modal-open="true"
                data-image-url={image.urls.full}
                data-alt-description={image.alt_description}
                data-description={image.description || 'No description available.'}
                data-user={image.user.name || 'Unknown'}
                class="text-blue-400 hover:text-blue-500 text-sm font-medium group-hover:underline"
              >
                View Full Image
              </button>
              <span class="text-xs text-black-400">
                By: {image.user.name || 'Unknown'}
              </span>
            </div>
          </div>
        </div>
      ))}
    </div>
  )}
</div>

<!-- Modal Section -->
<div id="modal" class="fixed inset-0 bg-gray-800 bg-opacity-75 hidden flex justify-center items-center z-50">
  <div class="relative bg-white p-6 rounded-lg max-w-lg w-full">
    <button id="close-modal" class="absolute top-2 right-2 text-white font-bold text-lg">
      X
    </button>
    
    <!-- Loading Spinner -->
    <div id="modal-loading" class="absolute inset-0 flex justify-center items-center bg-black bg-opacity-50 rounded-lg">
      <!-- Spinner -->
      <div class="animate-spin rounded-full border-t-4 border-blue-500 border-solid w-12 h-12"></div>
    </div>

    <img id="modal-image" src="" alt="" class="w-full h-auto rounded-md hidden" />
    <div class="mt-4 text-center">
      <h2 id="modal-title" class="text-lg font-semibold text-black-800">Image Title</h2>
      <p id="modal-description" class="text-sm text-black-500 mt-2">Image Description</p>
      <span id="modal-user" class="text-xs text-black-400">By: Unknown</span>
    </div>
  </div>
</div>

<script type="text/javascript" client:load>
  // Handle modal visibility and content
  document.querySelectorAll('[data-modal-open="true"]').forEach(button => {
    button.addEventListener('click', function () {
      const modal = document.getElementById('modal');
      const modalImage = document.getElementById('modal-image');
      const modalTitle = document.getElementById('modal-title');
      const modalDescription = document.getElementById('modal-description');
      const modalUser = document.getElementById('modal-user');
      const modalLoading = document.getElementById('modal-loading');
      
      // Set modal content
      modalImage.src = button.getAttribute('data-image-url');
      modalTitle.textContent = button.getAttribute('data-alt-description') || 'No Title';
      modalDescription.textContent = button.getAttribute('data-description');
      modalUser.textContent = `By: ${button.getAttribute('data-user')}`;

      // Show loading spinner before image is fully loaded
      modalLoading.classList.remove('hidden');
      modalImage.classList.add('hidden');

      // Show modal
      modal.classList.remove('hidden');
    });
  });

  // Wait until the image is loaded, then hide the loading spinner
  document.getElementById('modal-image').addEventListener('load', function () {
    const modalLoading = document.getElementById('modal-loading');
    const modalImage = document.getElementById('modal-image');
    
    // Hide the loading spinner and show the image
    modalLoading.classList.add('hidden');
    modalImage.classList.remove('hidden');
  });

  // Close the modal by clicking the close button
  document.getElementById('close-modal').addEventListener('click', function () {
    const modal = document.getElementById('modal');
    modal.classList.add('hidden');
  });

  // Close the modal when clicking outside the modal content (on the backdrop)
  document.getElementById('modal').addEventListener('click', function (e) {
    const modalContent = e.target.closest('.relative');
    if (!modalContent) {  // If the click is outside modal content, close the modal
      const modal = document.getElementById('modal');
      modal.classList.add('hidden');
    }
  });
</script>
